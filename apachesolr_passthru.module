<?php
// $Id$
/**
* Implementation of hook_views_api().
*/
function apachesolr_passthru_views_api() {
  return array('api' => '3');
}

/**
 * Implementation of hook_apachesolr_modify_query.
 */
function apachesolr_passthru_apachesolr_modify_query(&$query, &$params, $caller) {
  if ($caller == 'apachesolr_search') {
    // 'name' is already included elsewhere.
    //
    $params['fl'] .= ',address_line_1,address_line_2,address_line_3,address_line_4,company_number,postcode,sic_trade_classification_code';
  }
}

function _get_apachesolr_passthru_field_list() {
  $data = (object) array();
  try {
    $solr = apachesolr_get_solr();
    $data = $solr->getLuke();
  }
  catch (Exception $e) {
    watchdog('Apache Solr', nl2br(check_plain($e->getMessage())), NULL, WATCHDOG_ERROR);
    drupal_set_message(nl2br(check_plain($e->getMessage())), "warning");
    $data->fields = array();
  }

  $rows = array();
  $fields = (array)$data->fields;
  if ($fields) {
    foreach ($fields as $name => $field) {
      // Skip over 'text' because there's a special filter for that
      // already in apachesolr_views.
      //
      if ($name != 'text') {
        $rows[$name] = array($name, $field->type, isset($field->distinct) ? $field->distinct : $not_found);
      }
    }
  }
  return $rows;
}

/**
 * Implementation of hook_apachesolr_finalize_query.
 */
function apachesolr_views_query_finalize_query(&$query, &$params) {
  $params['q'] = '';
}

function apachesolr_passthru_apachesolr_search_result_alter(&$doc) {
  $doc->path = 'company/' . $doc->company_number;
  $doc->title = $doc->name;
  $doc->body = $doc->address_line_1 . ', ' . $doc->address_line_2 . ', ' . $doc->address_line_3 . ', ' . $doc->address_line_4 . ', ' . $doc->postcode;
  return $doc;
}


/**
 * Implementation of hook_apachesolr_facets().
 *
 * Returns an array keyed by block delta.
 */
function apachesolr_passthru_apachesolr_facets() {
  $facets = array();

  $fields = _get_apachesolr_passthru_field_list();

  foreach($fields as $field) {
    $key = $field[0];
    $facets[$key] = array(
      'info' => t('Filter by ' . $key),
      'facet_field' => $key,
    );
  }
  //kpr($facets);
  return $facets;
}

/**
 * Implementation of hook_block().
 */
function apachesolr_passthru_block($op = 'list', $delta = 0, $edit = array()) {
  switch ($op) {
    case 'list':
      $enabled_facets = apachesolr_get_enabled_facets('apachesolr_passthru');
      $facets = apachesolr_passthru_apachesolr_facets();
      // Add the blocks
      $blocks = array();
      foreach ($enabled_facets as $delta => $facet_field) {
        if (isset($facets[$delta])) {
          $blocks[$delta] = $facets[$delta] + array('cache' => BLOCK_CACHE_PER_PAGE);
        }
      }
      return $blocks;

    case 'view':
      if (apachesolr_has_searched()) {
        // Get the query and response. Without these no blocks make sense.
        $response = apachesolr_static_response_cache();
        if (empty($response)) {
          return;
        }
        $query = apachesolr_current_query();

        $enabled_facets = apachesolr_get_enabled_facets('apachesolr_passthru');
        $facets = apachesolr_passthru_apachesolr_facets();
        $facet = $facets[$enabled_facets[$delta]];
        if (empty($facet)) {
          return;
        }
        return apachesolr_facet_block($response, $query, 'apachesolr_passthru', $delta, $facet['facet_field'], t($facet['info']));
      }
      break;

    case 'configure':
      return apachesolr_facetcount_form('apachesolr_passthru', $delta);
      break;

    case 'save':
      apachesolr_facetcount_save($edit);
      break;
  }
}
